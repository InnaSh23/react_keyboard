{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleKeyPress","event","setState","key","document","addEventListener","this","removeEventListener","name","props","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAUaA,EAAb,4MACEC,MAAe,CACbC,WAAY,IAFhB,EAaEC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CACZH,WAAYE,EAAME,OAfxB,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,kBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,kBAV/C,oBAmBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WACAS,EAASF,KAAKG,MAAdD,KAER,OACE,qBAAKE,UAAU,MAAf,SACGX,EACC,mBAAGW,UAAU,eAAb,4CAC+BX,EAD/B,OAIA,mBAAGW,UAAU,eAAb,SACGF,UA/Bb,GAAyBG,a,MCLzBC,IAASC,OACP,cAAC,EAAD,CAAKL,KAAK,4BACVJ,SAASU,eAAe,W","file":"static/js/main.3af759cc.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends Component<Props, State> {\n  state: State = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyPress);\n  }\n\n  handleKeyPress = (event: KeyboardEvent) => {\n    this.setState({\n      pressedKey: event.key,\n    });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"App\">\n        {pressedKey ? (\n          <p className=\"App__message\">\n            {`The last pressed key is [${pressedKey}]`}\n          </p>\n        ) : (\n          <p className=\"App__message\">\n            {name}\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App name=\"Nothing was pressed yet\" />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}